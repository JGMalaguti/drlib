% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accumulate-while.R
\name{accumulate_while}
\alias{accumulate_while}
\title{Accumulate a list by iteratively performing a function}
\usage{
accumulate_while(.x, .f, .p, ..., .compare = FALSE, .max = 1e+05)
}
\arguments{
\item{.x}{Starting value}

\item{.f}{Function to apply to transform each step to the next}

\item{.p}{A predicate applied to each intermediate step: if false, it stops the iteration}

\item{...}{Extra arguments passed to .f}

\item{.compare}{Whether the predicate will be given the last two steps rather than just
the most recent.}

\item{.max}{Maximum number of iterations to perform. Give \code{Inf} to continue growing the
vector as long as necessary.}
}
\description{
Perform a function to transform an object multiple times, until a predicate
is not satisfied.
}
\details{
I've suggested a function like this in an issue on purrr:
\url{https://github.com/hadley/purrr/issues/253}.
I've put it here so I can use it personally in the meantime.
If it gets added to purrr, I will remove it from drlib.
}
\examples{

accumulate_while(1, ~ . + 1, ~ . < 5)

# accumulate until difference is within some tolerance
accumulate_while(1, ~ . / 2, ~ abs(.x - .y) > 1e-4, .compare = TRUE)

}

